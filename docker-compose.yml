# daroach.net
# Docker containers running on my homelab.
#
# Author: Gagan Daroach gagandaroach@gmail.com
# Web Proxy Date:           March 10 2019
# Web Client Date:          April 21 2019
# REST API Date:            June 22 2019
# MERGE Date:              March 11 2020

version: "3"

networks:
  backend:
  daroachnetwork:
    external: true
  cloud_internal:
    internal: true

volumes:
  conf:
  vhost:
  html:
  dhparam:
  certs:

services:
# daroach.net | WEBSITE SERVER - VueJS, NuxtJS
  nuxt_server:
    build: ./nuxt_server
    restart: unless-stopped
    ports:
      - 3000:3000
    environment:
      - VIRTUAL_HOST=daroach.net
      - VIRTUAL_PORT=3000
      - LETSENCRYPT_HOST=daroach.net
      - LETSENCRYPT_EMAIL=gagandaroach@gmail.com
    networks:
      - daroachnetwork
    command: "npm run start"
    depends_on: 
      - nginx-proxy

# api.daroach.net | INTERNET EXPOSED REST FLASK PYTHON
  flask_server:
    build:
      context: ./flask_server
      dockerfile: Dockerfile
    restart: unless-stopped
    depends_on:
      - flask_db
      - nginx-proxy
    networks:
      - backend
      - daroachnetwork
    environment:
      - VIRTUAL_HOST=api.daroach.net
      - VIRTUAL_PORT=35353
      - LETSENCRYPT_HOST=api.daroach.net
      - LETSENCRYPT_EMAIL=gagandaroach@gmail.com
    ports:
      - 5000:5000

# SQL SERVER FOR REST API STORAGE
  flask_db:
    image: mariadb
    env_file:
      - sql.env
    restart: "no"
    volumes:
      - /etc/localtime:/etc/localtime
      - ${FLASK_MOUNT_POINT}/mariadb:/var/lib/mysql
    ports:
      - 3306:3306
    networks:
      - backend

# PHP MY ADMIN FOR WEB CONTROL OF DATABASE
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    env_file:
      - phpmyadmin.env
    ports:
      - 1579:80
    depends_on:
      - flask_db
    restart: "no"
    volumes:
      - ${FLASK_MOUNT_POINT}/phpmyadmin:/www
    networks:
      - backend

# dynamic dns with google domains for daroach.net
  daroachnet_ddns:
    build: ./dynamic_dns
    restart: always
    volumes:
      - /etc/localtime:/etc/localtime
    networks:
      - daroachnetwork

# Daroach Tech Engine Docker Compose File
# My use of Jwilder's nginx-proxy and Jrcs's Letsencrypt Companion
# Author: Gagan Daroach gagandaroach@gmail.com
  nginx-proxy:
    build:
      context: ./nginx_proxy
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    restart: always
    networks:
      - daroachnetwork
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy"

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - nginx-proxy
    volumes:
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam:ro
      - certs:/etc/nginx/certs
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - NGINX_PROXY_CONTAINER=nginx-proxy
    restart: always
    networks:
      - daroachnetwork

# portainer.daroach.net | admin for docker containers
  portainer:
    restart: unless-stopped
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${PORTAINER_MOUNT_POINT}:/data
    environment:
      - VIRTUAL_HOST=portainer.daroach.net
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=portainer.daroach.net
      - LETSENCRYPT_EMAIL=gagandaroach@gmail.com
    command: -H unix:///var/run/docker.sock
    networks:
      - daroachnetwork
    ports:
      - 9000:9000
    depends_on: 
      - nginx-proxy

  #next cloud maria db sql server 
  cloud_db:
    image: mariadb
    command: --transaction-isolation=READ-COMMITTED --binlog-format=ROW
    restart: "no"
    volumes:
      - ${CLOUD_MOUNT_POINT}/mariadb:/var/lib/mysql
    env_file:
      - cloud_db.env
      - cloud_db-pass.env
    networks:
      - cloud_internal

  # redis ram cache
  redis:
    image: redis:alpine
    restart: always
    networks:
      - cloud_internal

  # next cloud main service
  nextcloud:
    build: ./cloud_server
    restart: "no"
    volumes:
      - ${CLOUD_MOUNT_POINT}/nextcloud:/var/www/html
    environment:
      - VIRTUAL_HOST=cloud.daroach.net
      - VIRTUAL_PORT=80
      - LETSENCRYPT_HOST=cloud.daroach.net
      - LETSENCRYPT_EMAIL=gagandaroach@gmail.com
      - MYSQL_HOST=cloud_db
      - REDIS_HOST=redis
    env_file:
      - cloud_db.env
      - cloud.env
    depends_on:
      - cloud_db
      - redis
    networks:
      - cloud_internal
      - daroachnetwork

  # nextcloud cron job
  cron:
    image: nextcloud:apache
    restart: "no"
    volumes:
      - ${CLOUD_MOUNT_POINT}/nextcloud:/var/www/html
    entrypoint: /cron.sh
    depends_on:
      - cloud_db
      - redis
    networks:
      - cloud_internal

#  collabora:
#    image: collabora/code
#    expose:
#      - 9980
#    cap_add:
#      - MKNOD
#    environment:
#      - domain=cloud.daroach.net
#      - VIRTUAL_HOST=office.daroach.net
#      - VIRTUAL_NETWORK=daroachnetwork
#      - VIRTUAL_PORT=9980
#      - VIRTUAL_PROTO=https
#      - LETSENCRYPT_HOST=office.daroach.net
#      - LETSENCRYPT_EMAIL=gagandaroach@gmail.com
#    networks:
#      - daroachnetwork

